insert
------

To insert data into collection, either use 
insert() or
save()

Storing book information :
--------------------------
>db.book.insert({_id:1,name:"mongodb",author:["Sanjay","Sachin","Richard"],price=567})


To insert multiple documents in a single query :
-------------------------------------------------
>db.book.insert([
                 {_id:1,name:"mongodb",author:["Sanjay","Sachin","Richard"],price:567},
                 {_id:2,name:"Java",author:"Sanjay",price:400}

])


Save Danger
-----------
What happens when we store two documents using same id using save()
e.g.
db.a.save({_id:1,x:10})
db.a.save({_id:1,name:"Sachin"})---------no error

Note : If the doucment contains an _id field, then the save() method performs an upsert querying the collection on the _id field.


What happens when we store two documents using same id using insert()
e.g.
db.a.save({_id:2,x:10})
db.a.save({_id:2,name:"Sachin"})-------duplicate key error

db.a.save({_id:1,x:10,y:3})

so id is 1 
    x is 10
    y is 3

db.a.save({_id:1,x:11})------------y will be deleted

remove
------
remove() method is used to remove document from the collection. 

>db.mycol.remove({'title':'MongoDB Overview'})

Remove only one
If there are multiple records and you want to delete only first record, then set justOne parameter in remove() method

>db.COLLECTION_NAME.remove(DELETION_CRITERIA,1)


Remove all documents :
db.mycol.remove()

update
------
syntax 
db.COLLECTION_NAME.update(SELECTIOIN_CRITERIA, UPDATED_DATA)


{ "_id" : 1, "title":"MongoDB Overview"}

db.mycol.update({'title':'MongoDB Overview'},{$set:{'title':'New MongoDB Tutorial'}})

By default mongodb will update only single document, to update multiple you need to set a paramter 'multi' to true.
>db.mycol.update({'title':'MongoDB Overview'},
   {$set:{'title':'New MongoDB Tutorial'}},{multi:true})

updating value using$inc:

db.a.save({_id:1,x:10});
db.a.update({_id:1}, {$inc:{x:1}})

Set operator
------------
db.a.save({_id:1,x:10});
db.a.update({_id:1},({$set:{y:3}})
db.a.update({_id:1},({$inc:{x:1}})
id 1  x  11  and y 3

Unset operator
--------------
>db.a.find()
{"_id":1,"x":11,"y":3}
>db.a.update({_id:1},{$unset:{y:''}})
 or
>db.a.update({id:1},{$unset:{y:0}})

rename
------
db.a.save({_id:1,Naem:"bob"})

db.a.update({_id:1}, {$rename:{'Naem':"Name'}})  where 'Naem' N is case sensitive

find()
------
syntax
db.COLLECTION_NAME.find()

pretty()
--------
db.COLLECTION_NAME.find()


db.animals.find({_id:1}) - entire documents you will get it

Projection
-----------
specific column - only id column, not other columns



db.animals.find({_id:{$gt:5}},{_id:1})


Comparison
----------
db.animals.find({_id:{$gt:5}},{_id:1})

                      $gt,$gte,$lt,$lte

db.animals.find({_id:{$gt:2,$lt:4}},{_id:1})